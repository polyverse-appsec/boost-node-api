service: boost-rest-api

custom:
  discoveryGroomer: ${self:custom.${self:provider.stage}.DISCOVERY_GROOMER}

  # DISCOVERY_GROOMER: "whatif"                       # set the discovery groomer to report grooming attempts, but skip discovery
  # DISCOVERY_GROOMER: "automatic"                    # perform automatic rediscovery on grooming cycle
  prod:
    DISCOVERY_GROOMER: "automatic"
  
  dev:
    DISCOVERY_GROOMER: "automatic"
  
  test:
    DISCOVERY_GROOMER: "automatic"

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}  # Use the stage specified in the command line, default to 'dev'
  region: us-west-2
  environment:
    APP_VERSION: ${file(./package.json):version}
    DYNAMO_DB_ANALYSIS: "Boost.AnalysisDataStore.${self:provider.stage}" # analysis data
    DYNAMO_DB_CRITICALDATA: "Boost.CriticalData.${self:provider.stage}"  # critical global data
    DYNAMO_DB_INSTALLATIONS: "Boost.GitHub-App.installations"            # github app data
    DEPLOYMENT_STAGE: "${self:provider.stage}"
    DISCOVERY_GROOMER: ${self:custom.discoveryGroomer}
    # BUILD_CRITICALDATA_CACHE: "true"                                     # dynamically build the critical data cache
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:us-west-2:*:table/${self:provider.environment.DYNAMO_DB_ANALYSIS}"
        - Effect: Allow
          Action:
            - dynamodb:GetItem
          #   - dynamodb:PutItem                                           # disabled by default to ensure service can't touch secrets
          Resource: "arn:aws:dynamodb:us-west-2:*:table/${self:provider.environment.DYNAMO_DB_CRITICALDATA}"
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:us-west-2:*:table/${self:provider.environment.DYNAMO_DB_INSTALLATIONS}"
        - Effect: "Allow"
          Action:
            - secretsmanager:GetSecretValue
          Resource: "arn:aws:secretsmanager:us-west-2:*:secret:*"
  httpApi:
    cors: true

package:
  exclude:
    - scripts/**
    - src/**
    - test/**
    - tsconfig.json

functions:
  api:
    handler: build/index.handler
    timeout: 29 # Lambda supports 15 minutes (900 seconds), but Serverless HTTP API only 30 seconds
    events:
      - httpApi: '*'
    url:
      invokeMode: BUFFERED

plugins:
  - serverless-offline
